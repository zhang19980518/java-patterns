抽象工厂模式（Abstract Factory Pattern）是一种软件开发设计模式。
抽象工厂模式提供了一种方式，可以将一组具有同一主题的单独的工厂封装起来。
如果比较抽象工厂模式和工厂模式，我们不难发现前者只是在工厂模式之上增加了一层抽象的概念。
抽象工厂是一个父类工厂，可以创建其它工厂类。所以我们也叫它 “工厂的工厂”。

现在，假设我们有 A、B 两个厨房。每个厨房拥有的餐具和食品都不一样，
但是用户搭配使用的方式，比如刀子和苹果、杯子和牛奶等等，我们假设是一致的


工厂方法模式、抽象工厂模式，傻傻分不清楚。

为了解释得更清楚，先介绍两个概念：

产品等级结构：比如一个抽象类是食物，其子类有苹果、牛奶等等，则抽象食物与具体食物名称之间构成了一个产品等级结构。食物是抽象的父类，而具体的食物名称是其子类。

产品族：在抽象工厂模式中，产品族是指由同一个工厂生产的，位于不同产品等级结构中的一组产品。
如 AKitchen 生产的苹果、刀子，苹果属于食物产品等级结构中，而刀子则属于餐具产品等级结构中。
而 BKitchen 可能生成另一组产品，如牛奶、杯子。

因此工厂方法模式、抽象工厂模式最大的区别在于：
工厂方法模式：针对的是 一个产品等级结构。
抽象工厂模式：针对 多个产品等级结构。